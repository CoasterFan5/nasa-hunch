// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  UNVERIFIED_TEACHER
  TEACHER
  SCHOOL_ADMIN
  HUNCH_ADMIN
}

model Organization {
  id      Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @db.VarChar(255)
  users User[]
  projects Project[]
}

model Session {
  id Int @id @default(autoincrement())
  sessionText String
  userId Int
  user User @relation(fields: [userId], references: [id])
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String @db.VarChar(255)
  lastName String @db.VarChar(255)
  email String @db.VarChar(255) @unique
  hash String @db.VarChar(1000)
  salt String @db.VarChar(255)
  role Role?
  sessions Session[]
  organization Organization? @relation(fields: [orgid], references: [id])
  orgid Int?
  ProjectUser ProjectUser[]
}


model ProjectUser {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userid Int
  projectid Int
  User User @relation(fields: [userid], references: [id])
  Project Project @relation("users", fields: [projectid], references: [id])
  ownedProject Project? @relation("owner")
  permissions Int
}

model Project {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @db.VarChar(255)
  description String @db.VarChar(255)
  organization Organization @relation(fields: [orgid], references: [id])
  orgid Int
  users ProjectUser[] @relation("users")
  owner ProjectUser @relation("owner", fields: [ownerId], references: [id])
  ownerId Int @unique
  files File[]
  joinCode Int @unique
}

// project management items
model File {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @db.VarChar(255)
  project Project @relation(fields: [projectId], references: [id])
  projectId Int
  link String @db.VarChar(255)
}
